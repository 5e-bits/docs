"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2619],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),u=a,h=d["".concat(l,".").concat(u)]||d[u]||m[u]||i;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},46875:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(67294);function a(e){let{children:t,objectives:n}=e;return r.createElement(r.Fragment,null,r.createElement("h2",null,"\u2705 Learning Objectives"),r.createElement("ol",null,n.map((e=>r.createElement("li",null,e)))),r.createElement("div",null,t))}},52879:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905)),i=n(46875);const o={},s="Interactive Monster Search with JavaScript",l={unversionedId:"tutorials/advanced/monster-search-with-javascript",id:"tutorials/advanced/monster-search-with-javascript",title:"Interactive Monster Search with JavaScript",description:"Welcome to this step-by-step tutorial on building an interactive monster search using JavaScript! If you have moderate experience with JavaScript, you're in the right place. By the end of this tutorial, you'll have a simple web application that allows users to search for and view Dungeons & Dragons 5th Edition (D&D 5e) monsters.",source:"@site/docs/tutorials/advanced/monster-search-with-javascript.mdx",sourceDirName:"tutorials/advanced",slug:"/tutorials/advanced/monster-search-with-javascript",permalink:"/docs/docs/tutorials/advanced/monster-search-with-javascript",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Discover D&D Races with Shell Scripting",permalink:"/docs/docs/tutorials/basic/discover-dnd-races-with-shell-scripting"},next:{title:"Command Line Spellbook with Python",permalink:"/docs/docs/tutorials/advanced/terminal-spellbook-with-python"}},c={},p=[{value:"Setting Up the Project",id:"setting-up-the-project",level:2},{value:"Building the Frontend",id:"building-the-frontend",level:2},{value:"<code>index.html</code>",id:"indexhtml",level:3},{value:"<code>styles.css</code>",id:"stylescss",level:3},{value:"Adding Functionality with JavaScript",id:"adding-functionality-with-javascript",level:2},{value:"<code>script.js</code>",id:"scriptjs",level:3},{value:"Testing the Application",id:"testing-the-application",level:2},{value:"Conclusion",id:"conclusion",level:2}],d={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"interactive-monster-search-with-javascript"},"Interactive Monster Search with JavaScript"),(0,a.kt)("p",null,"Welcome to this step-by-step tutorial on building an interactive monster search using JavaScript! If you have moderate experience with JavaScript, you're in the right place. By the end of this tutorial, you'll have a simple web application that allows users to search for and view Dungeons & Dragons 5th Edition (D&D 5e) monsters."),(0,a.kt)(i.Z,{objectives:["Learn to make a simple HTML webpage","Learn to interact with the API using HTTP requests in Javascript","Learn to create a form that allows users to get monsters from the API"],mdxType:"LearningObjectives"}),(0,a.kt)("h2",{id:"setting-up-the-project"},"Setting Up the Project"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Create a New Directory:"),' Start by creating a new directory for your project. You can name it something like "monster-search-app".')),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Initialize a Node.js Project:")," Open your terminal, navigate to the project directory, and run the following command to initialize a Node.js project:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"npm init -y\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Install Axios:")," Axios is a library for making HTTP requests. Install it by running the following command:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"npm install axios\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Create Files:")," Inside your project directory, create three files: ",(0,a.kt)("inlineCode",{parentName:"p"},"index.html"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"styles.css"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"script.js"),"."))),(0,a.kt)("h2",{id:"building-the-frontend"},"Building the Frontend"),(0,a.kt)("h3",{id:"indexhtml"},(0,a.kt)("inlineCode",{parentName:"h3"},"index.html")),(0,a.kt)("p",null,"Let's start by creating the HTML structure for our web application:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <link rel="stylesheet" href="styles.css" />\n    <title>Monster Search</title>\n  </head>\n  <body>\n    <div class="container">\n      <h1>Monster Search</h1>\n      <input type="text" id="monsterInput" placeholder="Enter a monster name" />\n      <button id="searchButton">Search</button>\n      <div id="monsterResult" class="monster-result"></div>\n    </div>\n    <script src="script.js"><\/script>\n  </body>\n</html>\n')),(0,a.kt)("h3",{id:"stylescss"},(0,a.kt)("inlineCode",{parentName:"h3"},"styles.css")),(0,a.kt)("p",null,"Let's style our web application to make it visually appealing:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},"body {\n  font-family: Arial, sans-serif;\n  background-color: #f0f0f0;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n}\n\n.container {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  text-align: center;\n}\n\nh1 {\n  color: #333;\n}\n\n#monsterInput {\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n#searchButton {\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 12px;\n  cursor: pointer;\n}\n\n.monster-result {\n  margin-top: 20px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  text-align: left;\n}\n")),(0,a.kt)("h2",{id:"adding-functionality-with-javascript"},"Adding Functionality with JavaScript"),(0,a.kt)("h3",{id:"scriptjs"},(0,a.kt)("inlineCode",{parentName:"h3"},"script.js")),(0,a.kt)("p",null,"Now, let's add the functionality to our web application using JavaScript:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'const monsterInput = document.getElementById("monsterInput");\nconst searchButton = document.getElementById("searchButton");\nconst monsterResult = document.getElementById("monsterResult");\n\nsearchButton.addEventListener("click", () => {\n  const monsterName = monsterInput.value.toLowerCase();\n  if (monsterName) {\n    searchMonster(monsterName);\n  } else {\n    monsterResult.innerHTML = "Please enter a monster name.";\n  }\n});\n\nfunction searchMonster(monsterName) {\n  monsterResult.innerHTML = "Searching...";\n\n  axios\n    .get(`https://www.dnd5eapi.co/api/monsters`)\n    .then((response) => {\n      const monsters = response.data.results;\n      const matchedMonster = monsters.find(\n        (monster) => monster.name.toLowerCase() === monsterName\n      );\n\n      if (matchedMonster) {\n        axios\n          .get(matchedMonster.url)\n          .then((monsterResponse) => {\n            const monsterData = monsterResponse.data;\n            monsterResult.innerHTML = `\n              <h2>${monsterData.name}</h2>\n              <p><strong>Index:</strong> ${monsterData.index}</p>\n              \x3c!-- You can display more monster details here --\x3e\n            `;\n          })\n          .catch((error) => {\n            monsterResult.innerHTML = "Error fetching monster details.";\n          });\n      } else {\n        monsterResult.innerHTML = "Monster not found.";\n      }\n    })\n    .catch((error) => {\n      monsterResult.innerHTML = "Error fetching monsters.";\n    });\n}\n')),(0,a.kt)("h2",{id:"testing-the-application"},"Testing the Application"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Open your terminal and navigate to the project directory.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run the following command to start a simple server:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"npx serve\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Visit ",(0,a.kt)("inlineCode",{parentName:"p"},"http://localhost:5000")," in your web browser to see the monster search application in action."))),(0,a.kt)("h2",{id:"conclusion"},"Conclusion"),(0,a.kt)("p",null,"Congratulations! You've successfully built an interactive monster search web application using JavaScript, HTML, and CSS. Users can now search for D&D 5e monsters and view their details."))}u.isMDXComponent=!0}}]);